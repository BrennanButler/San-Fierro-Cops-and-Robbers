CMD:time(playerid, params[])
{
	new Hours, Mins;
	gettime(Hours, Mins);
	format(G_String, 128, "Hours online: %d", Hours - TimeOnline[playerid]);
	SendClientMessage(playerid, -1, G_String);
	format(G_String, 128, "mins online: %d", Minutes[playerid] - Mins);
	SendClientMessage(playerid, -1, G_String);
	return 1;
}


CMD:creategroup(playerid, params[])
{
    if(Spawned[playerid] == 0) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} You need to spawn before you use any commands.");
    if(PlayerInfo[playerid][GroupID] == playerid) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} It seems you already own a group!"), SendClientMessage(playerid, COLOR_ORANGE, "You can delete your group via /leavegroup or invite players via /groupinvite");
    if(!IsPlayerSpamming(playerid)) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} Please stop spamming.");
    
    if(PlayerInfo[playerid][GroupID] != -1) {
        CallRemoteFunction("OnPlayerLeavePMGroup", "ii", playerid, PlayerInfo[playerid][GroupID]);
    }
    PlayerInfo[playerid][GroupID] = playerid;
    
    format(G_String, 128, "You have created your group! Use /groupinvite <id> to invite someone or tell them the group id : %d", PlayerInfo[playerid][GroupID]);
    SendClientMessage(playerid, COLOR_ORANGE, G_String);
	return 1;
}

CMD:groupmessage(playerid, params[])
{
    if(Spawned[playerid] == 0) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} You need to spawn before you use any commands.");
    if(PlayerInfo[playerid][GroupID] == -1) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} It seems you haven't joined a group!"), SendClientMessage(playerid, COLOR_ORANGE, "You can join a group by using /groupjoin <id> after someone has invited you.");
    new message[128];
    if(sscanf(params, "s[128]", message)) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} Usage: /groupmessage <message>");
    if(!IsPlayerSpamming(playerid)) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} Please stop spamming.");
    format(G_String, 128, "~Group Message~ [%s]: {FFFFFF} %s", PlayerName(playerid), message);
    SendMessageToPMGroup(PlayerInfo[playerid][GroupID], COLOR_ORANGE, G_String);
    
	return 1;
}

CMD:gm(playerid, params[])
{
	return cmd_groupmessage(playerid, params);
}

CMD:groupleave(playerid, params[])
{
    if(Spawned[playerid] == 0) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} You need to spawn before you use any commands.");
	if(PlayerInfo[playerid][GroupID] == -1) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} It seems you haven't joined a group!"), SendClientMessage(playerid, COLOR_ORANGE, "You can join a group by using /groupjoin <id> after someone has invited you.");
    if(!IsPlayerSpamming(playerid)) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} Please stop spamming.");

    if(PlayerInfo[playerid][GroupID] != -1) {
        CallRemoteFunction("OnPlayerLeavePMGroup", "ii", playerid, PlayerInfo[playerid][GroupID]);
    }
    
    PlayerInfo[playerid][GroupID] = -1;

	return 1;
}

CMD:groupinvite(playerid, params[])
{
    if(Spawned[playerid] == 0) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} You need to spawn before you use any commands.");
	if(PlayerInfo[playerid][GroupID] != playerid) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} It seems you haven't joined a group!"), SendClientMessage(playerid, COLOR_ORANGE, "You can create a group by using /groupcreate and invite people via /groupinvite");
	new id;
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} Usage: /groupinvite <id>");
	if(!IsPlayerSpamming(playerid)) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} Please stop spamming.");
    format(G_String, 128, "~Group Message~ : {FFFFFF} %s has invited %s", PlayerName(playerid), PlayerName(id));
    SendMessageToPMGroup(PlayerInfo[playerid][GroupID], COLOR_ORANGE, G_String);
    format(G_String, 128, "You have been invited to %s group! Use /groupjoin %d to join the group", PlayerName(playerid), PlayerInfo[playerid][GroupID]);
    SendClientMessage(id, COLOR_ORANGE, G_String);
    
 	return 1;
}

CMD:groupjoin(playerid, params[])
{
    if(Spawned[playerid] == 0) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} You need to spawn before you use any commands.");
	new id;
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} Usage: /groupinvite <id>");
	if(!IsPlayerSpamming(playerid)) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} Please stop spamming.");
    
    
    if(PlayerInfo[playerid][GroupID] != -1) {
        CallRemoteFunction("OnPlayerLeavePMGroup", "ii", playerid, PlayerInfo[playerid][GroupID]);
    }
    
    PlayerInfo[playerid][GroupID] = id;
    
	format(G_String, 128, "~Group Message~ : {FFFFFF} %s has joined the group", PlayerName(playerid));
    SendMessageToPMGroup(id, COLOR_ORANGE, G_String);
    
	return 1;
}

CMD:groupmembers(playerid, params[])
{
    if(Spawned[playerid] == 0) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} You need to spawn before you use any commands.");
    if(!IsPlayerSpamming(playerid)) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} Please stop spamming.");
    if(PlayerInfo[playerid][GroupID] == -1) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} It seems you haven't joined a group!"), SendClientMessage(playerid, COLOR_ORANGE, "You can join a group by using /groupjoin <id> after someone has invited you.");
    format(G_String, 128, "Group %d | Members", PlayerInfo[playerid][GroupID]);
    SendClientMessage(playerid, COLOR_ORANGE, G_String);
    SendClientMessage(playerid, -1, "");
    
    foreach(Player, i) {
    
        if(PlayerInfo[playerid][GroupID] == PlayerInfo[i][GroupID]) {
            if(PlayerInfo[i][GroupID] == i) {
				format(G_String, 128, "%s - Group Owner", PlayerName(i));
				SendClientMessage(playerid, COLOR_ORANGE, G_String);
			} else {
			    format(G_String, 128, "%s", PlayerName(i));
				SendClientMessage(playerid, COLOR_ORANGE, G_String);
			}
        }
    }
    
	return 1;
}

CMD:groupkick(playerid, params[])
{
    if(Spawned[playerid] == 0) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} You need to spawn before you use any commands.");
	if(PlayerInfo[playerid][GroupID] != playerid) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} It seems you haven't joined a group!"), SendClientMessage(playerid, COLOR_ORANGE, "You can create a group by using /groupcreate and invite people via /groupinvite");
	new id;
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} Usage: /groupinvite <id>");
	if(!IsPlayerSpamming(playerid)) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} Please stop spamming.");
	if(PlayerInfo[id][GroupID] != playerid) return SendClientMessage(playerid, COLOR_ORANGE, "[ERROR] :{FFFFFF} This player is not in your group.");
	
	format(G_String, 128, "~Group Message~ : {FFFFFF} %s has been kicked from the group", PlayerName(id));
    SendMessageToPMGroup(id, COLOR_ORANGE, G_String);
    
    PlayerInfo[id][GroupID] = -1;
    
	return 1;
}

CMD:robstore(playerid, params[])
{
	if(!IsPlayerCivilianClass(playerid) && gTeam[playerid] != MECHANIC && gTeam[playerid] != HITMAN && gTeam[playerid] != TRUCKER) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} Law enforcements are not allowed to rob stores.");
	if(!IsPlayerInRobberyCheckpoint(playerid)) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} You need to be in the store and in the checkpoint to use this command.");
	new rob = CommenceRobbery(playerid, PlayerRobberyID[playerid]);
	if(rob == -2) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} This store has already been robbed.");
	if(rob == -3) return SendClientMessage(playerid, COLOR_RED2, "[ERROR] :{FFFFFF} You cannot rob this store while it's being robbed.");
	return 1;
}